<?php

namespace App\Repositories;

use App\Http\Requests\ProductRequest;
use App\Models\Product;
use Illuminate\Support\Facades\Storage;

class ProductRepository {

    protected $product;

    public function __construct(Product $product)
    {
        $this->product = $product;
    }

    public function getAll()
    {
        return $this->product->Paginate(18);
    }

    public function findById(string $id)
    {
        return $this->product::where('id', $id)->first();
    }

    public function delete(Product $product)
    {
        if(Storage::exists('public/pdf/'.$product->pdf_name))
            Storage::delete('public/pdf/'.$product->pdf_name);

        if(Storage::exists('public/images/'.$product->image_name))
            Storage::delete('public/images/'.$product->image_name);
        
        $product->delete();
    }

    public function create(ProductRequest $request)
    {
        $product = new Product(); 
        $product->name = $request['nazwa'];
        $product->code_qr = $request['kod'];
        $product->category_id = $request['kategoria'];

        $pdf = $request->file('pdf');
        $path = $pdf->store('public/pdf');
        $filename_pdf = $pdf->hashName();

        $image = $request['zdjÄ™cie'];
        $path2 = $image->store('public/images');
        $filename_image = $image->hashName();

        // original file name: $name2 = $image->getClientOriginalName();
        // name generated by laravel: $name2 = $image->hashName();
        // path to file: $path2

        $product->pdf_name = $filename_pdf;
        $product->image_name = $filename_image;
        $product->user_id = $request->user()->id;

        $product->save();

        return $product;
    }

    public function findByNameAndCategory(string $name, int $category)
    {
        return $product = $this->product::where('name', 'LIKE', '%'.$name.'%')->where('category_id', $category)->paginate(18);
    }

    public function findByName(string $name)
    {
        return $product = $this->product::where('name', 'LIKE', '%'.$name.'%')->paginate(18);
    }

    public function findByCategory(int $category)
    {
        return $product = $this->product::where('category_id', $category)->paginate(18);
    }

}